module StringMap exports (
    StringMap,
    empty,
    keys,
    values,
    get,
    remove,
    insert,
);

import Array;
import Maybe (
    Maybe(..),
);


type StringMap(value);

empty: StringMap(value) = empty_impl;

keys = keys_impl;

values = fn (sm: StringMap(value)): Array(value) ->
    keys(sm)
    |> Array.map(fn (key) -> get(sm, key))
    |> Array.filter(fn (mb) -> mb);

get = fn (sm: StringMap(value), key: String): Maybe(value) -> get_impl(
    sm,
    key,
    Just,
    Nothing,
);

insert = insert_impl;

remove = remove_impl;

foreign empty_impl: StringMap(value);

foreign get_impl: (StringMap(value), String, (value) -> a, a) -> a;

foreign insert_impl: (StringMap(value), String, value) -> StringMap(value);

foreign remove_impl: (StringMap(value), String) -> StringMap(value);

foreign keys_impl: (StringMap(value)) -> Array(String);
