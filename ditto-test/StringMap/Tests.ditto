module StringMap.Tests exports (
    tests,
);

import Array;
import Int;
import Maybe;
import StringMap;
import Test (
    Test,
);


tests: Array(Test) = [
    Test.pure(
        "StringMap: empty",
        Test.assert(
            StringMap.empty
            |> StringMap.keys()
            |> Array.is_empty,
        ),
    ),
    Test.pure(
        "StringMap: insert",
        let
            sm =
                StringMap.empty
                |> StringMap.insert("a", unit)
                |> StringMap.insert("b", unit)
                |> StringMap.insert("c", unit)
                |> StringMap.insert("c", unit);
        in
        Test.assert(Int.is_eq(Array.length(StringMap.keys(sm)), 3)),
    ),
    Test.pure(
        "StringMap: get",
        let
            sm =
                StringMap.empty
                |> StringMap.insert("a", 0)
                |> StringMap.insert("b", 1)
                |> StringMap.insert("c", 2)
                |> StringMap.insert("c", 3);
        in
        Test.assert(
            match StringMap.get(sm, "c") with
            | Maybe.Just(i) -> Int.is_eq(i, 3)
            | Maybe.Nothing -> false
            end,
        ),
    ),
    Test.pure(
        "StringMap: get missing",
        Test.assert(
            match StringMap.get(StringMap.empty, "a") with
            | Maybe.Just(_) -> false
            | Maybe.Nothing -> true
            end,
        ),
    ),
];
