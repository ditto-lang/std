module StringMap.Tests exports (
    tests,
)

import Array
import Array.Tests (
    array_is_eq,
)
import Int
import Maybe
import StringMap
import Test (
    Test,
)


tests: Array(Test) = [
    Test.pure(
        "StringMap: empty",
        Test.assert(
            StringMap.empty
            |> StringMap.keys()
            |> Array.is_empty,
        ),
    ),
    Test.pure(
        "StringMap: insert",
        let
            sm =
                StringMap.empty
                |> StringMap.insert("a", unit)
                |> StringMap.insert("b", unit)
                |> StringMap.insert("c", unit)
                |> StringMap.insert("c", unit)
        in
        Test.assert(
            Array.length(StringMap.keys(sm))
            |> Int.is_eq(3),
        ),
    ),
    Test.pure(
        "StringMap: get",
        let
            sm = StringMap.from_array(
                -- why is the formatting messed up for the third entry below?
                [
                    { key = "a", value = 0 },
                    { key = "b", value = 1 },
                    {key = "c", value = 2 },
                    { key = "c", value = 3 },
                ],
            )
        in
        Test.assert(
            match StringMap.get(sm, "c") with
            | Maybe.Just(i) -> Int.is_eq(i, 3)
            | Maybe.Nothing -> false
            end,
        ),
    ),
    Test.pure(
        "StringMap: get missing",
        Test.assert(
            match StringMap.get(StringMap.empty, "a") with
            | Maybe.Just(_) -> false
            | Maybe.Nothing -> true
            end,
        ),
    ),
    Test.pure(
        "StringMap: remove",
        let
            sm =
                StringMap.empty
                |> StringMap.insert("a", 0)
                |> StringMap.remove("a")
        in
        Test.assert(
            Array.length(StringMap.keys(sm))
            |> Int.is_eq(0),
        ),
    ),
    Test.pure(
        "StringMap: values",
        let
            sm =
                StringMap.empty
                |> StringMap.insert("a", 0)
                |> StringMap.insert("b", 1)
                |> StringMap.insert("c", 2)
                |> StringMap.insert("d", 3)
        in
        Test.assert(array_is_eq(StringMap.values(sm), [0, 1, 2, 3], Int.is_eq)),
    ),
]
